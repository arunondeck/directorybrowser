{"version":3,"sources":["actions/actionTypes.js","components/DirectoryActions.js","components/File.js","components/Folder.js","components/FormAddNew.js","components/DirectoryView.js","App.js","stores/initialState.js","reducers/index.js","stores/index.js","index.js"],"names":["actionTypes","ADD_FOLDER","ADD_FILE","CHANGE_PWD_CHILD","CHANGE_PWD_PARENT","DirectoryActions","_this","this","react_default","a","createElement","Fragment","NavItem","onClick","props","isRoot","alert","changePWDParent","fa","size","color","title","showAddForm","React","Component","File","className","clickFile","Folder","changePWDChild","FormAddNew","lib","show","onHide","hideAddForm","Header","closeButton","Title","Body","inputRef","ref","myInput","placeholder","aria-label","Footer","variant","addFolder","value","TreeViewContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","setState","_this2","formHTML","components_FormAddNew","addFile","childHTML","pwd","children","length","map","childNodePath","nodes","type","components_File","key","path","components_Folder","Jumbotron","Grid","xs","md","frameBorder","Row","Navbar","bg","expand","Col","Brand","Nav","disabled","DirectoryActions_DirectoryActions","connect","pwd_path","dispatch","changeToFolder","folderTitle","fileTitle","App","DirectoryView","initialState","/","newNode","types","folder","file","pwd_parent","reducer","_Object$assign","_Object$assign2","arguments","undefined","action","newFolder","assign","newFolderPath","replace","defineProperty","concat","toConsumableArray","newFile","newFilePath","newParentPath","substr","lastIndexOf","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.adc884ae.chunk.js","sourcesContent":["const actionTypes = {\r\n    ADD_FOLDER : 'ADD_FOLDER',\r\n    ADD_FILE : 'ADD_FILE',\r\n    CHANGE_PWD_CHILD : 'CHANGE_PWD_CHILD',\r\n    CHANGE_PWD_PARENT : 'CHANGE_PWD_PARENT',\r\n}\r\n\r\nexport default actionTypes;","import React from 'react';\r\nimport {FaChevronUp, FaPlus} from 'react-icons/fa';\r\nimport {NavItem} from 'react-bootstrap';\r\n\r\nexport default class DirectoryActions extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <NavItem>\r\n                    <span onClick={() => this.props.isRoot ? alert('Already at root') : this.props.changePWDParent()} >\r\n                        <FaChevronUp size={'12px'} color={'#999'} title='Go Up'/>Go Up\r\n                    </span>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <span onClick={()=> this.props.showAddForm()}>\r\n                        <FaPlus color={'#999'} title='Add New Folder'/>New Folder\r\n                    </span>\r\n                </NavItem>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { FaFile } from 'react-icons/fa';\r\n\r\nclass File extends React.Component{\r\n    clickFile(){\r\n        alert(\"No permission to open file!\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"node file\">\r\n                <FaFile/><a onClick={()=> this.clickFile()} className=\"title\">{this.props.title}</a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default File;","import React from 'react';\r\nimport {FaFolder } from 'react-icons/fa';\r\n\r\nclass Folder extends React.Component{\r\n    render(){\r\n        return (\r\n            <div className=\"node folder\">\r\n                <FaFolder/><span onClick={()=>this.props.changePWDChild(this.props.title)} className=\"title\">{this.props.title}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Folder;","import React from 'react'\r\nimport {Modal, Button, InputGroup, FormControl} from 'react-bootstrap/lib';\r\n\r\nclass FormAddNew extends React.Component {\r\n    render() {\r\n      return (\r\n        <>\r\n          <Modal show={true} onHide={() => this.props.hideAddForm()}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add New Folder</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <InputGroup className=\"mb-3\">\r\n                <FormControl inputRef={ref => { this.myInput = ref; }} placeholder=\"Folder Name\" aria-label=\"Folder Name\"/>\r\n            </InputGroup>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"primary\" onClick={() => {this.props.addFolder(this.myInput.value); this.props.hideAddForm()}}>\r\n                Add\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default FormAddNew;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport actionTypes from '../actions/actionTypes';\r\nimport {Row, Col, Grid, Navbar, Nav, NavItem, Jumbotron} from 'react-bootstrap';\r\n//import DirectoryTitle from './DirectoryTitle.js';\r\nimport DirectoryActions from './DirectoryActions.js';\r\nimport File from './File.js';\r\nimport Folder from './Folder.js';\r\nimport FormAddNew from './FormAddNew';\r\n\r\nclass TreeViewContainer extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.showAddForm = this.showAddForm.bind(this);\r\n        this.hideAddForm = this.hideAddForm.bind(this);\r\n        this.state = {\r\n            showAddForm: false,\r\n        };\r\n    }\r\n\r\n    showAddForm(){\r\n        this.setState({showAddForm: true});\r\n    }\r\n\r\n    hideAddForm() {\r\n      this.setState({ showAddForm: false });\r\n    }\r\n\r\n    render(){\r\n        let formHTML = this.state.showAddForm ? <FormAddNew hideAddForm = {this.hideAddForm} addFolder={this.props.addFolder} addFile={this.props.addFile} /> : ''\r\n        let childHTML =this.props.pwd.children.length > 0 ? this.props.pwd.children.map(\r\n                (childNodePath) => this.props.nodes[childNodePath].type == 'file' ? <File key={childNodePath} path={childNodePath} title={this.props.nodes[childNodePath].title}/> : <Folder key={childNodePath} path={childNodePath} changePWDChild={this.props.changePWDChild} title={this.props.nodes[childNodePath].title}/>\r\n            ) : <Jumbotron>\r\n            <h1>Empty Directory</h1>\r\n            <p>\r\n                There are no folders in this directory. Why don't you create one by clicking the button above?\r\n            </p>\r\n        </Jumbotron>;\r\n        return(\r\n            <Grid xs={12} md={10} frameBorder={1} className='border border-dark'>\r\n                    <Row className='directory-header'>\r\n                        <Navbar bg=\"light\" expand=\"lg\">\r\n                            <Row className='title'>\r\n                                <Col xs={12}><Navbar.Brand>File-Folder Manager</Navbar.Brand></Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col xs={12}>\r\n                                    <Nav className=\"mr-auto\">\r\n                                        <NavItem disabled className=\"pwd-title\"> \r\n                                            {this.props.pwd.title}\r\n                                        </NavItem>\r\n                                        <DirectoryActions showAddForm = {this.showAddForm} changePWDParent={this.props.changePWDParent} isRoot={this.props.pwd.isRoot}/>\r\n                                    </Nav>\r\n                                </Col>\r\n                            </Row>\r\n                        </Navbar>\r\n                    </Row>\r\n                    <Row className='directory-body'>\r\n                        <Col>\r\n                            {childHTML}\r\n                        </Col>\r\n                    </Row>\r\n                {formHTML}\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        pwd: state.nodes[state.pwd_path],\r\n        nodes: state.nodes\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return({\r\n        changePWDParent: () => {dispatch({type: actionTypes.CHANGE_PWD_PARENT})},\r\n        changePWDChild: (changeToFolder) => {dispatch({type: actionTypes.CHANGE_PWD_CHILD, changeToFolder: changeToFolder})},\r\n        addFolder: (folderTitle) => {dispatch({type: actionTypes.ADD_FOLDER, folderTitle: folderTitle})},\r\n        addFile: (fileTitle) => {dispatch({type:actionTypes.ADD_FILE, fileTitle: fileTitle})}\r\n    })\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TreeViewContainer);","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport DirectoryView from './components/DirectoryView';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"app-root\">\n        <DirectoryView/>\n      </div>\n    );\n  }\n}\n\nexport default App;","const initialState = {\r\n    nodes: {\r\n        '/' : {\r\n            title : '/',\r\n            type : 'folder',\r\n            children: [],\r\n            isRoot : true\r\n        }\r\n    },\r\n    newNode :{\r\n        title : '',\r\n        type : '',\r\n        children: [],\r\n        isRoot : false\r\n    },\r\n    types : {\r\n        folder : 'folder',\r\n        file : 'file'\r\n    },\r\n    pwd_parent: false,\r\n    pwd_path: '/'\r\n}\r\n\r\nexport default initialState;","import initialState from '../stores/initialState';\r\nimport actionTypes from '../actions/actionTypes';\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.ADD_FOLDER:\r\n            let newFolder = Object.assign({}, state.newNode);\r\n            newFolder.title = action.folderTitle;\r\n            newFolder.type = state.types.folder;\r\n            let newFolderPath = state.pwd_path.replace(/\\/$/, \"\") + '/' + action.folderTitle;\r\n            let newState = Object.assign({}, state, {\r\n                nodes : Object.assign({}, state.nodes, {\r\n                    [newFolderPath] : newFolder,\r\n                    [state.pwd_path] : Object.assign({}, state.nodes[state.pwd_path], {children: [...state.nodes[state.pwd_path].children, newFolderPath]})})\r\n            });\r\n            return newState;\r\n        case actionTypes.ADD_FILE:\r\n            let newFile = Object.assign({}, state.newNode);\r\n            newFile.title = action.fileTitle;\r\n            newFile.type = state.types.file;\r\n            let newFilePath = state.pwd_path.replace(/\\/$/, \"\") + '/' + action.fileTitle;\r\n            return Object.assign({}, state, {\r\n                nodes : Object.assign({}, state.nodes, {\r\n                    [newFilePath] : newFile,\r\n                    [state.pwd_path] : Object.assign({}, state.nodes[state.pwd_path], {children: [...state.nodes[state.pwd_path].children, newFilePath]})})\r\n            });\r\n        case actionTypes.CHANGE_PWD_CHILD:\r\n            return Object.assign({}, state, {pwd_path: state.pwd_path.replace(/\\/$/, \"\") + '/' + action.changeToFolder, pwd_parent: state.pwd_path});\r\n        case actionTypes.CHANGE_PWD_PARENT:\r\n            let newParentPath = state.pwd_parent.substr(0, state.pwd_parent.lastIndexOf(\"/\")) === '' ? '/' : state.pwd_parent.substr(0, state.pwd_parent.lastIndexOf(\"/\"));\r\n            return Object.assign({}, state, {pwd_path: state.pwd_parent, pwd_parent: newParentPath});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers';\r\n\r\nconst store = createStore(reducer,applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport store from './stores';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}